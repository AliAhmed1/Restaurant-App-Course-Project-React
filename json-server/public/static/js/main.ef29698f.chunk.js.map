{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/forms.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","handleToggleModal","bind","submitComment","this","setState","values","console","log","JSON","stringify","postComment","dishId","rating","author","comment","Fragment","Button","outline","color","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","select","model","text","validators","minLength","show","messages","textarea","rows","type","Component","RenderComments","comments","in","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","transformProps","exitTransform","top","CardBody","CardText","description","DishDetail","Header","isNavOpen","toggleNav","toggleModal","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","md","Col","placeholder","size","offset","checkbox","About","RenderLeader","leaders","Media","object","body","heading","CardHeader","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","InitialFeedback","Dishes","action","Comments","concat","Promotions","Leaders","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTAEaA,EAAU,WACnB,OACI,yBAAKC,UAAU,UACX,0BAAMA,UAAU,oDAChB,8CCNCC,EAAU,yBCUvB,SAASC,EAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAiB,EAAXC,QAC5B,OACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAKI,KACpB,kBAACC,EAAA,EAAD,CAASC,MAAM,OAAOC,IAAKT,EAAUE,EAAKQ,MAAOC,IAAKT,EAAKU,OAC3D,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAYZ,EAAKU,SAOrC,IAkDeG,EAlDF,SAACC,GAEV,IAAMC,EAAOD,EAAME,OAAOA,OAAOC,KAAI,SAACjB,GAClC,OACI,yBAAKH,UAAU,sBAAsBqB,IAAKlB,EAAKI,IAC1C,kBAACL,EAAD,CAAgBC,KAAMA,QAKnC,OAAIc,EAAME,OAAOG,UAET,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAME,OAAOI,QAEd,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKiB,EAAME,OAAOI,YAQ9B,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAK1B,UAAU,UACX,oCACA,+BAGR,yBAAKA,UAAU,OACVkB,K,+FC9CfS,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAAOA,EAAIC,QAAUE,IAIpDC,E,kDACF,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IACDgB,MAAQ,CACTC,aAAa,GAEjB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBANN,E,gEAWfE,KAAKC,SAAS,CACVL,aAAcI,KAAKL,MAAMC,gB,oCAKnBM,GACVC,QAAQC,IAAI,oBAAsBC,KAAKC,UAAUJ,IACjDF,KAAKrB,MAAM4B,YAAYP,KAAKrB,MAAM6B,OAAQN,EAAOO,OAAQP,EAAOQ,OAAQR,EAAOS,SAC/EX,KAAKH,sB,+BAIC,IA5BKJ,EA4BN,OACL,OACI,kBAAC,IAAMmB,SAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,YAAYjD,QAASkC,KAAKH,mBAAmB,0BAAMnC,UAAU,iBAAnF,kBACA,kBAACsD,EAAA,EAAD,CAAOC,OAAQjB,KAAKL,MAAMC,YAAasB,OAAQlB,KAAKH,mBAChD,kBAACsB,EAAA,EAAD,CAAaD,OAAQlB,KAAKH,mBAA1B,kBACA,kBAACuB,EAAA,EAAD,KACI,kBAAC,YAAD,CAAW1D,UAAU,YAAY2D,SAAU,SAACnB,GAAD,OAAY,EAAKH,cAAcG,KACtE,kBAACoB,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,UAAf,UACA,kBAAC,UAAQC,OAAT,CAAgBC,MAAM,UAClBnD,KAAK,SACLb,UAAU,gBACV,qCACA,qCACA,qCACA,qCACA,uCAGR,kBAAC4D,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,UAAf,aACA,kBAAC,UAAQG,KAAT,CAAcD,MAAM,UAChBzD,GAAG,SACHP,UAAU,eACVkE,WAAY,CACRvC,WACAwC,WAvDrBpC,EAuD0C,EAvDlC,SAACH,GAAD,OAASA,GAAOA,EAAIC,QAAUE,IAwDjBD,UAAWA,EAAU,OAE7B,kBAAC,SAAD,CAAQkC,MAAM,UACVhE,UAAU,cACVoE,KAAK,UACLC,SAAU,CACN1C,SAAU,WACVwC,UAAW,oCACXrC,UAAW,oCAIvB,kBAAC8B,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,WAAf,WACA,kBAAC,UAAQQ,SAAT,CAAkBN,MAAM,WACpBhE,UAAU,eACVO,GAAG,UACHM,KAAK,UACL0D,KAAK,OAGb,kBAACpB,EAAA,EAAD,CAAQqB,KAAK,SAASnB,MAAM,WAA5B,kB,GA1EFoB,aAqF1B,SAASC,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAU9B,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC7C,OAAgB,MAAZ6B,EAEI,yBAAK3E,UAAU,uBACX,wCACA,wBAAIA,UAAU,iBACV,kBAAC,UAAD,CAAS4E,IAAE,GACND,EAASvD,KAAI,SAAC6B,GAAD,OACV,kBAAC,OAAD,CAAM2B,IAAE,GACJ,wBAAIvD,IAAK4B,EAAQ1C,IACb,6BACC0C,EAAQA,QACT,6BACCA,EAAQD,OAJb,KAKC,IAAI6B,KAAKC,eAAe,QACjB,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAC1CC,OAAO,IAAIC,KAAKA,KAAKC,MAAMnC,EAAQoC,eAMzD,kBAAC,EAAD,CAAavC,OAAQA,EAAQD,YAAaA,KAK9C,6BACI,kBAAC,EAAD,OAMhB,SAASyC,EAAT,GAA+B,IAATnF,EAAQ,EAARA,KAClB,OACI,kBAAC,gBAAD,CACIyE,IAAE,EACFW,eAAgB,CACZC,cAAe,gCAEnB,kBAACnF,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAASiF,KAAG,EAAC/E,IAAKT,EAAUE,EAAKQ,MAAOC,IAAKT,EAAKU,OAClD,kBAAC6E,EAAA,EAAD,KACI,kBAAC3E,EAAA,EAAD,KAAYZ,EAAKU,MACjB,kBAAC8E,EAAA,EAAD,KAAWxF,EAAKyF,gBA2DrBC,MAnDf,SAAoB5E,GAChB,IAAId,EAAOc,EAAMd,KACjB,OAAIc,EAAMK,UAEF,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAMM,QAEP,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKiB,EAAMM,WAKV,MAARpB,EAED,yBAAKH,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAEvB,EAAKU,OAEjC,yBAAKb,UAAU,UACX,4BAAKG,EAAKU,MACV,+BAGR,yBAAKb,UAAU,OACX,yBAAKA,UAAU,uBACX,kBAACsF,EAAD,CAAYnF,KAAMA,KAEtB,kBAACuE,EAAD,CAAgBC,SAAU1D,EAAM0D,SAC5B9B,YAAa5B,EAAM4B,YACnBC,OAAQ7B,EAAMd,KAAKI,OAO/B,+B,0FCnGGuF,E,kDArGb,WAAY7E,GAAQ,IAAD,8BACjB,cAAMA,IAGDgB,MAAQ,CACX8D,WAAW,EACX7D,aAAa,GAEf,EAAK8D,UAAY,EAAKA,UAAU5D,KAAf,gBACjB,EAAK6D,YAAc,EAAKA,YAAY7D,KAAjB,gBACnB,EAAK8D,YAAc,EAAKA,YAAY9D,KAAjB,gBAVF,E,wDAcjBE,KAAKC,SAAS,CACZwD,WAAYzD,KAAKL,MAAM8D,c,oCAIzBzD,KAAKC,SAAS,CACZL,aAAcI,KAAKL,MAAMC,gB,kCAIjBiE,GACV7D,KAAK2D,cACLG,MAAM,aAAe9D,KAAK+D,SAASC,MAAQ,cAAgBhE,KAAKiE,SAASD,MACrE,cAAgBhE,KAAKkE,SAASC,SAClCN,EAAMO,mB,+BAKE,IAAD,OACP,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAClB,yBAAK7G,UAAU,aACb,kBAAC8G,EAAA,EAAD,CAAe1G,QAASkC,KAAK0D,YAC7B,kBAACe,EAAA,EAAD,CAAa/G,UAAU,UAAUgH,KAAK,KAAI,yBAAKtG,IAAI,yBAAyBuG,OAAO,KAAKxG,MAAM,KAAKG,IAAI,2BACvG,kBAACsG,EAAA,EAAD,CAAU3D,OAAQjB,KAAKL,MAAM8D,UAAWoB,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAKD,QAAM,GACT,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWM,GAAG,SAAQ,0BAAMN,UAAU,qBAAzD,UAEF,kBAACqH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWM,GAAG,YAAW,0BAAMN,UAAU,qBAA5D,cAEF,kBAACqH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWM,GAAG,SAAQ,0BAAMN,UAAU,qBAAzD,UAEF,kBAACqH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASrH,UAAU,WAAWM,GAAG,cAAa,0BAAMN,UAAU,6BAA9D,iBAGJ,kBAACoH,EAAA,EAAD,CAAKpH,UAAU,UAAUmH,QAAM,GAC7B,kBAACE,EAAA,EAAD,KACE,kBAAClE,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,OAAOjD,QAASkC,KAAK2D,aAAa,0BAAMjG,UAAU,wBAAxE,eAMV,kBAACsH,EAAA,EAAD,KACE,yBAAKtH,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,qDACA,yLAKR,kBAACsD,EAAA,EAAD,CAAOC,OAAQjB,KAAKL,MAAMC,YAAasB,OAAQlB,KAAK2D,aAClD,kBAACxC,EAAA,EAAD,CAAaD,OAAQlB,KAAK2D,aAA1B,SACA,kBAACvC,EAAA,EAAD,KACE,kBAAC6D,EAAA,EAAD,CAAM5D,SAAUrB,KAAK4D,aACnB,kBAACsB,EAAA,EAAD,KACE,kBAAC3D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2D,EAAA,EAAD,CAAOjD,KAAK,OAAOjE,GAAG,WAAWM,KAAK,WACpC6G,SAAU,SAACC,GAAD,OAAW,EAAKtB,SAAWsB,MAEzC,kBAACH,EAAA,EAAD,KACE,kBAAC3D,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAAC2D,EAAA,EAAD,CAAOjD,KAAK,WAAWjE,GAAG,WAAWM,KAAK,WACxC6G,SAAU,SAACC,GAAD,OAAW,EAAKpB,SAAWoB,MAEzC,kBAACH,EAAA,EAAD,CAAWI,OAAK,GACd,kBAAC/D,EAAA,EAAD,CAAO+D,OAAK,GACV,kBAACH,EAAA,EAAD,CAAOjD,KAAK,WAAW3D,KAAK,WAC1B6G,SAAU,SAACC,GAAD,OAAW,EAAKnB,SAAWmB,KAFzC,gBAKF,kBAACxE,EAAA,EAAD,CAAQqB,KAAK,SAAS8B,MAAM,SAASjD,MAAM,WAA3C,iB,GA9FOoB,aCyCNoD,MA/Cf,SAAgB5G,GACZ,OACI,yBAAKjB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMM,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAKN,UAAU,kBACX,2CACA,6DAC6B,6BAD7B,2BAEgB,6BAFhB,YAGC,6BACG,uBAAGA,UAAU,sBAJjB,mBAIyD,6BACrD,uBAAGA,UAAU,oBALjB,mBAKuD,6BACnD,uBAAGA,UAAU,yBANjB,KAM8C,uBAAGgH,KAAK,6BAAR,wBAIlD,yBAAKhH,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCgH,KAAK,uBAAsB,uBAAGhH,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCgH,KAAK,2CAA0C,uBAAGhH,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCgH,KAAK,+BAA8B,uBAAGhH,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCgH,KAAK,uBAAsB,uBAAGhH,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCgH,KAAK,uBAAsB,uBAAGhH,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBgH,KAAK,WAAU,uBAAGhH,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,SC/BxB,SAAS8H,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,KAAMzG,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAEnC,OAAID,EAEI,kBAAC,EAAD,MAGCC,EAED,4BAAKA,GAKL,kBAAC,gBAAD,CACIqD,IAAE,EACFW,eAAgB,CACZC,cAAe,gCAEnB,kBAACnF,EAAA,EAAD,KACI,kBAACG,EAAA,EAAD,CAASE,IAAKT,EAAU8H,EAAKpH,MAAOC,IAAKmH,EAAKlH,OAC9C,kBAAC6E,EAAA,EAAD,KACI,kBAAC3E,EAAA,EAAD,KAAYgH,EAAKlH,MAChBkH,EAAKC,YAAc,kBAACC,EAAA,EAAD,KAAeF,EAAKC,aAA8B,KACtE,kBAACrC,EAAA,EAAD,KAAWoC,EAAKnC,gBA0BzBsC,MAlBf,SAAcjH,GACV,OACI,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qBACX,kBAAC8H,EAAD,CAAYC,KAAM9G,EAAMd,KAAMmB,UAAWL,EAAMkH,cAAe5G,QAASN,EAAMmH,iBAEjF,yBAAKpI,UAAU,qBACX,kBAAC8H,EAAD,CAAYC,KAAM9G,EAAMoH,UAAW/G,UAAWL,EAAMqH,aAAc/G,QAASN,EAAMsH,gBAErF,yBAAKvI,UAAU,qBACX,kBAAC8H,EAAD,CAAYC,KAAM9G,EAAMuH,OAAQlH,UAAWL,EAAMwH,cAAelH,QAASN,EAAMyH,oB,UC7C7F/G,GAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDoC,GAAY,SAACpC,GAAD,OAAS,SAACH,GAAD,OAASA,GAAQA,EAAIC,QAAUE,IACpD4G,GAAW,SAAC/G,GAAD,OAAUgH,MAAMC,OAAOjH,KAClCkH,GAAa,SAAClH,GAAD,MAAS,4CAA4CmH,KAAKnH,IA0M9DoH,G,kDArMX,WAAY/H,GAAQ,IAAD,8BACf,cAAMA,IAEDgI,aAAe,EAAKA,aAAa7G,KAAlB,gBAHL,E,yDAQNI,GACTC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUJ,IAClD4D,MAAM,qBAAuBzD,KAAKC,UAAUJ,IAC5CF,KAAKrB,MAAMiI,aAAa1G,EAAO2G,UAAW3G,EAAO4G,SAAU5G,EAAO6G,OAAQ7G,EAAO8G,MAAO9G,EAAO+G,MAC/F/G,EAAOgH,YAAahH,EAAOiH,SAC3BnH,KAAKrB,MAAMyI,sB,+BAML,IAAD,OAEL,OACI,yBAAK1J,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJ,yBAAK1B,UAAU,UACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,+BACX,2CACA,6DAC6B,6BAD7B,2BAEwB,6BAFxB,YAGS,6BACL,uBAAGA,UAAU,gBAJjB,mBAImD,6BAC/C,uBAAGA,UAAU,cALjB,mBAKiD,6BAC7C,uBAAGA,UAAU,mBANjB,KAMwC,uBAAGgH,KAAK,6BAAR,wBAG5C,yBAAKhH,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY2J,KAAK,SAC5B,uBAAGA,KAAK,SAAS3J,UAAU,kBAAkBgH,KAAK,oBAAmB,uBAAGhH,UAAU,gBAAlF,SACA,uBAAG2J,KAAK,SAAS3J,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAG2J,KAAK,SAAS3J,UAAU,kBAAkBgH,KAAK,6BAA4B,uBAAGhH,UAAU,qBAA3F,aAKZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACX,sDAEJ,yBAAKA,UAAU,mBAEX,kBAAC,OAAD,CAAMgE,MAAM,WAAWL,SAAU,SAACnB,GAAD,OAAY,EAAKyG,aAAazG,KAC3D,kBAACoB,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,YAAY8F,GAAI,GAA/B,cACA,kBAACC,GAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQ3F,KAAT,CAAcD,MAAM,aAAazD,GAAG,YAAYM,KAAK,YACjDiJ,YAAY,aACZ9J,UAAU,eACVkE,WAAY,CACRvC,YAAUwC,UAAWA,GAAU,GAAIrC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI9B,UAAU,cACVgE,MAAM,aACNI,KAAK,UACLC,SAAU,CACN1C,SAAU,YACVwC,UAAW,oCACXrC,UAAW,qCAK3B,kBAAC8B,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,WAAW8F,GAAI,GAA9B,aACA,kBAACC,GAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQ3F,KAAT,CAAcD,MAAM,YAAYzD,GAAG,WAAWM,KAAK,WAC/CiJ,YAAY,YACZ9J,UAAU,eACVkE,WAAY,CACRvC,YAAUwC,UAAWA,GAAU,GAAIrC,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACI9B,UAAU,cACVgE,MAAM,YACNI,KAAK,UACLC,SAAU,CACN1C,SAAU,YACVwC,UAAW,oCACXrC,UAAW,qCAK3B,kBAAC8B,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,SAAS8F,GAAI,GAA5B,gBACA,kBAACC,GAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQ3F,KAAT,CAAcD,MAAM,UAAUzD,GAAG,SAASM,KAAK,SAC3CiJ,YAAY,cACZ9J,UAAU,eACVkE,WAAY,CACRvC,YAAUwC,UAAWA,GAAU,GAAIrC,UAAWA,GAAU,IAAK6G,eAGrE,kBAAC,SAAD,CACI3I,UAAU,cACVgE,MAAM,UACNI,KAAK,UACLC,SAAU,CACN1C,SAAU,YACVwC,UAAW,iCACXrC,UAAW,6BACX6G,SAAU,wBAK1B,kBAAC/E,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,QAAQ8F,GAAI,GAA3B,SACA,kBAACC,GAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQ3F,KAAT,CAAcD,MAAM,SAASzD,GAAG,QAAQM,KAAK,QACzCiJ,YAAY,QACZ9J,UAAU,eACVkE,WAAY,CACRvC,YAAUmH,iBAGlB,kBAAC,SAAD,CACI9I,UAAU,cACVgE,MAAM,SACNI,KAAK,UACLC,SAAU,CACN1C,SAAU,YACVmH,WAAY,6BAK5B,kBAAClF,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6J,GAAA,EAAD,CAAKD,GAAI,CAAEG,KAAM,EAAGC,OAAQ,IACxB,yBAAKhK,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAO+D,OAAK,GACR,kBAAC,UAAQqC,SAAT,CAAkBjG,MAAM,SAASnD,KAAK,QAClCb,UAAU,qBAFlB,IAGQ,IACJ,0DAIZ,kBAAC6J,GAAA,EAAD,CAAKD,GAAI,CAAEG,KAAM,EAAGC,OAAQ,IACxB,kBAAC,UAAQjG,OAAT,CAAgBC,MAAM,eAAenD,KAAK,cACtCb,UAAU,gBACV,wCACA,4CAIZ,kBAAC4D,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6D,EAAA,EAAD,CAAOC,QAAQ,UAAU8F,GAAI,GAA7B,iBACA,kBAACC,GAAA,EAAD,CAAKD,GAAI,IACL,kBAAC,UAAQtF,SAAT,CAAkBN,MAAM,WAAWzD,GAAG,UAAUM,KAAK,UACjD0D,KAAK,KACLvE,UAAU,mBAGtB,kBAAC4D,EAAA,EAAD,CAAK5D,UAAU,cACX,kBAAC6J,GAAA,EAAD,CAAKD,GAAI,CAAEG,KAAM,GAAIC,OAAQ,IACzB,kBAAC7G,EAAA,EAAD,CAAQqB,KAAK,SAASnB,MAAM,WAA5B,2B,GA1LdoB,a,sCC6GPyF,OAtHf,SAAejJ,GAIX,IAAMkJ,EAAe,WACjB,OAAIlJ,EAAMmJ,QAAQ9I,UAEV,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKPiB,EAAMmJ,QAAQ7I,QAEf,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAKiB,EAAMM,WAOnBN,EAAMmJ,QAAQA,QAAQhJ,KAAI,SAACoH,GACvB,OACI,kBAAC,UAAD,CAAS5D,IAAE,GACP,kBAAC,OAAD,CAAMA,IAAE,GACJ,kBAACyF,GAAA,EAAD,CAAOrK,UAAU,QACb,kBAACqK,GAAA,EAAD,KACI,kBAACA,GAAA,EAAD,CAAOC,QAAM,EAAC5J,IAAKT,EAAUuI,EAAO7H,MAAOC,IAAK4H,EAAO3H,QAE3D,kBAACwJ,GAAA,EAAD,CAAOE,MAAI,EAACvK,UAAU,QAClB,+BAAKwI,EAAO3H,MACZ,kBAACwJ,GAAA,EAAD,CAAOG,SAAO,GACThC,EAAOR,aAEXQ,EAAO5C,oBAc5C,OACI,yBAAK5F,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMnB,GAAG,SAAT,SAChB,kBAACmB,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAK1B,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACK,EAAA,EAAD,KACI,kBAACoK,GAAA,EAAD,CAAYzK,UAAU,yBAAtB,qBACA,kBAAC0F,EAAA,EAAD,KACI,wBAAI1F,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACK,EAAA,EAAD,KACI,kBAACqF,EAAA,EAAD,CAAU1F,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAM0K,MAAM,gBAAZ,0EAQpB,yBAAK1K,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,eACX,kBAACqK,GAAA,EAAD,CAAOM,MAAI,GACP,kBAACR,EAAD,CAAc3B,OAAQvH,EAAMuH,cCHvCL,GAAgB,iBAAO,CAChC3D,KChH0B,mBDmHjBoG,GAAe,SAACC,GAAD,MAAc,CACtCrG,KCnHyB,gBDoHzBsG,QAASD,IAGAE,GAAY,SAAC5J,GAAD,MAAa,CAClCqD,KCvHsB,aDwHtBsG,QAAS3J,IAwBA6J,GAAiB,SAACH,GAAD,MAAc,CACxCrG,KC/I2B,kBDgJ3BsG,QAASD,IAGAI,GAAc,SAACtG,GAAD,MAAe,CACtCH,KCrJwB,eDsJxBsG,QAASnG,IA0BAuG,GAAgB,iBAAO,CAChC1G,KC/K0B,mBDkLjB2G,GAAe,SAACN,GAAD,MAAc,CACtCrG,KCjLyB,gBDkLzBsG,QAASD,IAGAO,GAAY,SAACC,GAAD,MAAa,CAClC7G,KCvLsB,aDwLtBsG,QAASO,IA2BAC,GAAiB,iBAAO,CACnC9G,KClN6B,oBDqNlB+G,GAAgB,SAACV,GAAD,MAAc,CACzCrG,KCpN4B,iBDqN5BsG,QAASD,IAGEW,GAAa,SAACpB,GAAD,MAAc,CACtC5F,KC1NyB,cD2NzBsG,QAASV,I,kBEhMLqB,G,kLAIFnJ,KAAKrB,MAAMyK,cACXpJ,KAAKrB,MAAM0K,gBACXrJ,KAAKrB,MAAM2K,cACXtJ,KAAKrB,MAAM4K,iB,mCAIA/I,GACXR,KAAKC,SAAS,CAAEuJ,aAAchJ,M,+BAGtB,IAAD,OA8BP,OACE,6BACE,kBAAC,EAAD,MACA,kBAACiJ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAe3K,IAAKiB,KAAKrB,MAAMgL,SAAS5K,IAAK6K,WAAW,OAAOC,QAAS,KACtE,kBAAC,KAAD,CAAQF,SAAU3J,KAAKrB,MAAMgL,UACzB,kBAAC,KAAD,CAAOG,KAAK,QAAQC,UAnCjB,WACf,OACE,kBAAC,EAAD,CACMlM,KAAM,EAAKc,MAAME,OAAOA,OAAOmL,QAAO,SAACnM,GAAD,OAAUA,EAAKoM,YAAU,GAC/DpE,cAAe,EAAKlH,MAAME,OAAOG,UACjCkL,YAAa,EAAKvL,MAAME,OAAOI,QAC/B8G,UAAW,EAAKpH,MAAMwL,WAAWA,WAAWH,QAAO,SAACI,GAAD,OAAWA,EAAMH,YAAU,GAC9EjE,aAAc,EAAKrH,MAAMwL,WAAWnL,UACpCiH,aAAc,EAAKtH,MAAMwL,WAAWlL,QACpCiH,OAAQ,EAAKvH,MAAMmJ,QAAQA,QAAQkC,QAAO,SAAC9D,GAAD,OAAYA,EAAO+D,YAAU,GACvE9D,cAAe,EAAKxH,MAAMmJ,QAAQ9I,UAClCoH,cAAe,EAAKzH,MAAMmJ,QAAQ7I,aAyB9B,kBAAC,KAAD,CAAOoL,OAAK,EAACP,KAAK,WAAWC,UAAW,kBAAM,kBAAC,GAAD,CAAOjC,QAAS,EAAKnJ,MAAMmJ,aACzE,kBAAC,KAAD,CAAOuC,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAMlL,OAAQ,EAAKF,MAAME,YACpE,kBAAC,KAAD,CAAOiL,KAAK,gBAAgBC,UAtBvB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MACpB,OACE,kBAAC,EAAD,CAAYzM,KAAM,EAAKc,MAAME,OAAOA,OAAOmL,QAAO,SAACnM,GAAD,OAAUA,EAAKI,KAAOsM,SAASD,EAAME,OAAOhK,OAAO,OAAK,GACtGxB,UAAW,EAAKL,MAAME,OAAOG,UAC7BC,QAAS,EAAKN,MAAME,OAAOI,QAC3BoD,SAAU,EAAK1D,MAAM0D,SAASA,SAAS2H,QAAO,SAACrJ,GAAD,OAAaA,EAAQH,SAAW+J,SAASD,EAAME,OAAOhK,OAAO,OAC3GiK,gBAAiB,EAAK9L,MAAM0D,SAASpD,QACrCsB,YAAa,EAAK5B,MAAM4B,iBAgBlB,kBAAC,KAAD,CAAO8J,OAAK,EAACP,KAAK,aAAaC,UAAW,kBAAM,kBAAC,GAAD,CAASnD,aAAc,EAAKjI,MAAMiI,aAAcQ,kBAAmB,EAAKzI,MAAMyI,uBAC9H,kBAAC,KAAD,CAAUpJ,GAAG,aAIvB,kBAAC,EAAD,W,GA5DWmE,aAkEJuI,gBAAWC,oBAvFF,SAAAhL,GACtB,MAAO,CACLd,OAAQc,EAAMd,OACdwD,SAAU1C,EAAM0C,SAChB8H,WAAYxK,EAAMwK,WAClBrC,QAASnI,EAAMmI,YAIQ,SAAA8C,GAAQ,MAAK,CACtCrK,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCiK,EF4BzB,SAACpK,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACiK,GAE7D,IAAMC,EAAa,CACfrK,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIb,OAFAkK,EAAW9H,MAAO,IAAIF,MAAOiI,cAEtBC,MAAMpN,EAAU,WAAY,CAC/BqN,OAAQ,OACR/C,KAAM5H,KAAKC,UAAUuK,GACrBI,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EApCI,SAACjK,GAAD,MAAc,CACpCuB,KClDuB,cDmDvBsG,QAAS7H,GAkCkBgL,CAAWP,OACrCQ,OAAM,SAAAN,GAAYnL,QAAQC,IAAI,gBAAiBkL,EAAMnE,SAAUrD,MAAM,4CAA4CwH,EAAMnE,aE5D/D5G,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FiG,aAAc,SAACC,EAAWC,EAAUC,EAAQC,EAAQC,EAAQC,EAAcC,GAA5D,OACdyD,EFnB0B,SAAC/D,EAAWC,EAAUC,EAAQC,EAAQC,EAAQC,EAAcC,GAA5D,OAAwE,SAACyD,GAEnG,IAAMiB,EAAc,CAClBhF,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAIX,OAFA0E,EAAY9I,MAAO,IAAIF,MAAOiI,cAEvBC,MAAMpN,EAAU,WAAY,CAC/BqN,OAAQ,OACR/C,KAAM5H,KAAKC,UAAUuL,GACrBZ,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhBC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAC,GAAQ,OAAIR,EAvCsB,CACxC1I,KCO0B,eDN1BsG,QAqCuC4C,OACtCQ,OAAM,SAAAN,GAAYnL,QAAQC,IAAI,gBAAiBkL,EAAMnE,SACtDrD,MAAM,6CAA6CwH,EAAMnE,aEjBhDP,CAAaC,EAAWC,EAAUC,EAAQC,EAAQC,EAAQC,EAAcC,KACjFiC,YAAa,WAAQwB,GF4DU,SAACA,GAI9B,OAFAA,EAAS/E,IAAc,IAEhBkF,MAAMpN,EAAU,UACtBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMnE,YAGrCgE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAAtM,GAAM,OAAI+L,EAASnC,GAAU5J,OAClC+M,OAAM,SAAAN,GAAK,OAAIV,EAAStC,GAAagD,EAAMnE,iBE/E9CC,kBAAmB,WAAQwD,EAASkB,UAAQC,MAAM,cAClD1C,cAAe,kBAAMuB,GF+FY,SAACA,GAEhC,OAAOG,MAAMpN,EAAU,YACtBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMnE,YAGrCgE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAA9I,GAAQ,OAAIuI,EAASjC,GAAYtG,OACtCuJ,OAAM,SAAAN,GAAK,OAAIV,EAASlC,GAAe4C,EAAMnE,iBEhHhDmC,YAAa,kBAAMsB,GF6HY,SAACA,GAI9B,OAFAA,EAAShC,MAEFmC,MAAMpN,EAAU,cACtBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMnE,YAGrCgE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAApC,GAAM,OAAI6B,EAAS9B,GAAUC,OAClC6C,OAAM,SAAAN,GAAK,OAAIV,EAAS/B,GAAayC,EAAMnE,iBEhJ9CoC,aAAc,kBAAMqB,GFkKY,SAACA,GAIjC,OAFAA,EAAS5B,MAEF+B,MAAMpN,EAAU,WACtBwN,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMnE,YAGrCgE,MAAK,SAAAC,GAAQ,OAAIA,EAASM,UAC1BP,MAAK,SAAArD,GAAO,OAAI8C,EAAS1B,GAAWpB,OACpC8D,OAAM,SAAAN,GAAK,OAAIV,EAAS3B,GAAcqC,EAAMnE,oBEhHrBwD,CAA6CxB,K,iBCrG1D6C,GAAkB,CAC3BnF,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbC,QAAS,I,6BCPA8E,GAAS,WAEM,IAFLtM,EAEI,uDAFI,CAAEX,WAAW,EACxCC,QAAS,KACTJ,OAAO,IAAKqN,EAAW,uCACvB,OAAQA,EAAOhK,MACX,IHHkB,aGId,OAAO,6BAAIvC,GAAX,IAAkBX,WAAW,EAAOC,QAAS,KAAMJ,OAAQqN,EAAO1D,UAEtE,IHRsB,iBGSlB,OAAO,6BAAI7I,GAAX,IAAkBX,WAAW,EAAMC,QAAS,KAAMJ,OAAQ,KAE9D,IHVqB,gBGWjB,OAAO,6BAAIc,GAAX,IAAkBX,WAAW,EAAOC,QAASiN,EAAO1D,UAExD,QACI,OAAO7I,ICdNwM,GAAW,WAAoD,IAAnDxM,EAAkD,uDAA1C,CAAEV,QAAS,KAAMoD,SAAS,IAAK6J,EAAW,uCACzE,OAAQA,EAAOhK,MACb,IJAwB,eICtB,OAAO,6BAAIvC,GAAX,IAAkBV,QAAS,KAAMoD,SAAU6J,EAAO1D,UAEpD,IJF2B,kBIGzB,OAAO,6BAAI7I,GAAX,IAAkBV,QAASiN,EAAO1D,UAEpC,IJVuB,cIWnB,IAAI7H,EAAUuL,EAAO1D,QACrB,OAAO,6BAAK7I,GAAZ,IAAmB0C,SAAU1C,EAAM0C,SAAS+J,OAAOzL,KAEvD,QACE,OAAOhB,ICbA0M,GAAa,WAE0C,IAFzC1M,EAEwC,uDAF/B,CAAEX,WAAW,EACTC,QAAS,KACTkL,WAAW,IAAK+B,EAAW,uCAC/D,OAAQA,EAAOhK,MACX,ILCkB,aKAlB,OAAO,6BAAIvC,GAAX,IAAkBX,WAAW,EAAOC,QAAS,KAAMkL,WAAY+B,EAAO1D,UAEtE,ILHsB,iBKIlB,OAAO,6BAAI7I,GAAX,IAAkBX,WAAW,EAAMC,QAAS,KAAMkL,WAAY,KAElE,ILJqB,gBKKjB,OAAO,6BAAIxK,GAAX,IAAkBX,WAAW,EAAOC,QAASiN,EAAO1D,UAExD,QACE,OAAO7I,ICdJ2M,GAAU,WAIR,IAJS3M,EAIV,uDAJkB,CAC5BX,WAAW,EACXC,QAAS,KACT6I,QAAS,IACVoE,EAAW,uCACV,OAAQA,EAAOhK,MACX,INEmB,cMDf,OAAO,6BAAKvC,GAAZ,IAAmBX,WAAW,EAAOC,QAAS,KAAM6I,QAASoE,EAAO1D,UAExE,INFuB,kBMGnB,OAAO,6BAAK7I,GAAZ,IAAmBX,WAAW,EAAMC,QAAS,KAAM6I,QAAS,KAEhE,INHsB,iBMIlB,OAAO,6BAAKnI,GAAZ,IAAmBX,WAAW,EAAOC,QAASiN,EAAO1D,UACzD,QACI,OAAO7I,ICXb4M,GCOYC,uBACVC,2BAAgB,cACZ5N,OAAQoN,GACR5J,SAAU8J,GACVhC,WAAYkC,GACZvE,QAASwE,IACNI,sBAAY,CACXC,SAAUX,OAGlBY,2BAAgBC,KAAOC,ODEhBC,G,uKAdX,OAEE,kBAAC,YAAD,CAAUR,MAAOA,IACjB,kBAAC,IAAD,KACE,yBAAK7O,UAAU,OACb,kBAAC,GAAD,a,GARQyE,a,OEIE6K,QACW,cAA7BC,OAAOtD,SAASuD,UAEe,UAA7BD,OAAOtD,SAASuD,UAEhBD,OAAOtD,SAASuD,SAAS5C,MACvB,2DCRN6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvC,MAAK,SAAAwC,GACJA,EAAaC,gBAEdhC,OAAM,SAAAN,GACLnL,QAAQmL,MAAMA,EAAMnE,a","file":"static/js/main.ef29698f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                {<RenderMenuItem dish={dish} /*onClick={props.onClick}*/ />}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu; ","import React, { Component } from \"react\";\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardImg,\r\n    CardText,\r\n    CardTitle,\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Button,\r\n    Modal,\r\n    ModalHeader, ModalBody, Row, Label\r\n} from \"reactstrap\";\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from \"react-redux-form\";\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.handleToggleModal = this.handleToggleModal.bind(this);\r\n        this.submitComment = this.submitComment.bind(this);\r\n    }\r\n\r\n\r\n    handleToggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\r\n    submitComment(values) {\r\n        console.log('Data after submit' + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        this.handleToggleModal();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline color=\"secondary\" onClick={this.handleToggleModal}><span className=\"fa fa-pencil\"></span> Submit button</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.handleToggleModal}>\r\n                    <ModalHeader toggle={this.handleToggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm className=\"container\" onSubmit={(values) => this.submitComment(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\"\r\n                                    name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text model=\".author\"\r\n                                    id=\"author\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        minLength: minLength(3),\r\n                                        maxLength: maxLength(15)\r\n                                    }} />\r\n                                <Errors model=\".author\"\r\n                                    className=\"text-danger\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\">Comment</Label>\r\n                                <Control.textarea model=\".comment\"\r\n                                    className=\"form-control\"\r\n                                    id=\"comment\"\r\n                                    name=\"comment\"\r\n                                    rows=\"6\">\r\n                                </Control.textarea>\r\n                            </Row>\r\n                            <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => (\r\n                            <Fade in>\r\n                                <li key={comment.id}>\r\n                                    <br></br>\r\n                                    {comment.comment}\r\n                                    <br></br>\r\n                                    {comment.author} ,\r\n                                {new Intl.DateTimeFormat('en-US',\r\n                                        { year: 'numeric', month: 'short', day: '2-digit' }\r\n                                    ).format(new Date(Date.parse(comment.date)))}\r\n                                </li>\r\n                            </Fade>\r\n                        ))}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    )\r\n}\r\n\r\n\r\nfunction DishDetail(props) {\r\n    let dish = props.dish;\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={dish}></RenderDish>\r\n                    </div>\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import {\r\n//     Card, CardImg, CardText, CardBody,\r\n//     CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody,\r\n//     Button, Row, Col, Label\r\n// } from 'reactstrap';\r\n// import { Control, LocalForm, Errors } from 'react-redux-form';\r\n// import { Link } from 'react-router-dom';\r\n// import { Comments } from '../redux/comments';\r\n\r\n\r\n// const required = (val) => val && val.length;\r\n// const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n// const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n// class DishDetail extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n\r\n//         this.state = {\r\n//             isNavOpen: false,\r\n//             isModalOpen: false\r\n//         };\r\n\r\n//         this.toggleModal = this.toggleModal.bind(this);\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//     }\r\n\r\n\r\n//     toggleModal() {\r\n//         this.setState({\r\n//             isModalOpen: !this.state.isModalOpen\r\n//         });\r\n//     }\r\n\r\n//     handleSubmit(values) {\r\n//         console.log('Current State is: ' + JSON.stringify(values));\r\n//         alert('Current State is: ' + JSON.stringify(values));\r\n//         console.log(this.props.addComment(this.props.dishId, values.rating, values.author, values.comment));\r\n//         // event.preventDefault();\r\n//     }\r\n\r\n\r\n\r\n//     RenderDish(dish) {\r\n//         return (\r\n//             <Card key={dish.id}>\r\n//                 <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n//                 <CardBody>\r\n//                     <CardTitle>{dish.name}</CardTitle>\r\n//                     <CardText>{dish.description}</CardText>\r\n//                 </CardBody>\r\n//             </Card>\r\n//         );\r\n//     }\r\n\r\n//     RenderComments(comments, addComment, dishId) {\r\n//         return (\r\n//             comments.map((comment) => {\r\n//                 return (\r\n//                     <div>\r\n//                         <ul key={comment.id} className=\"list-unstyled\">\r\n//                             <li>\r\n//                                 {comment.comment}\r\n//                             </li>\r\n//                             <br></br>\r\n//                             <li>\r\n//                                 {comment.author} ,\r\n//                                   {new Intl.DateTimeFormat('en-US',\r\n//                                     { year: 'numeric', month: 'short', day: '2-digit' }\r\n//                                 ).format(new Date(Date.parse(comment.date)))}\r\n//                             </li>\r\n//                         </ul>\r\n//                         {this.CommentForm(addComment, dishId)}\r\n//                     </div>\r\n//                 );\r\n//             })\r\n\r\n//         );\r\n//     }\r\n\r\n//     CommentForm() {\r\n//         return (\r\n//             <div>\r\n//                 <Button outline color=\"secondary\" onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span> Submit button</Button>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n//     render() {\r\n//         const dish = this.props.dish;\r\n//         const comments = this.props.comments;\r\n\r\n//         if (dish != null && comments != null) {\r\n//             return (\r\n//                 <div className=\"container\">\r\n//                     <div className=\"row\">\r\n//                         <Breadcrumb>\r\n//                             <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n//                             <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n//                         </Breadcrumb>\r\n//                         <div className=\"col-12\">\r\n//                             <h3>{dish.name}</h3>\r\n//                             <hr />\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"row\">\r\n//                         <div className=\"col-12 col-md-5 m-1\">\r\n//                             {this.RenderDish(dish)}\r\n//                         </div>\r\n//                         <div className=\"col-12 col-md-5 m-1\">\r\n//                             {this.RenderComments(comments, this.props.addComment, dish.id)}\r\n\r\n\r\n//                             <br></br>\r\n//                         </div>\r\n//                     </div>\r\n//                     <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n//                         <ModalHeader toggle={this.toggleModal}><h4>Submit Comment</h4></ModalHeader>\r\n//                         <ModalBody className=\"px-5\">\r\n//                             <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n//                                 <Row>\r\n//                                     <Label htmlFor=\"rating\" >Rating</Label>\r\n//                                 </Row>\r\n//                                 <Row className=\"form-group\">\r\n//                                     <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n//                                         // placeholder=\"1\"\r\n//                                         className=\"form-control\">\r\n//                                         <option>1</option>\r\n//                                         <option>2</option>\r\n//                                         <option>3</option>\r\n//                                         <option>4</option>\r\n//                                         <option>5</option>\r\n//                                     </Control.select>\r\n//                                 </Row>\r\n//                                 <Row>\r\n//                                     <Label htmlFor=\"author\">Your Name</Label>\r\n//                                 </Row>\r\n//                                 <Row className=\"form-group\">\r\n//                                     <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n//                                         placeholder=\"Your Name\"\r\n//                                         className=\"form-control\"\r\n//                                         validators={{\r\n//                                             required, minLength: minLength(3), maxLength: maxLength(15)\r\n//                                         }}\r\n//                                     />\r\n//                                     <Errors\r\n//                                         className=\"text-danger\"\r\n//                                         model=\".name\"\r\n//                                         show=\"touched\"\r\n//                                         messages={{\r\n//                                             required: 'Required ',\r\n//                                             minLength: 'Must be greater than 2 characters',\r\n//                                             maxLength: 'Must be 15 characters or less'\r\n//                                         }}\r\n//                                     />\r\n//                                 </Row>\r\n\r\n//                                 <Row>\r\n//                                     <Label htmlFor=\"comment\">Your Feedback</Label>\r\n//                                 </Row>\r\n\r\n//                                 <Row className=\"form-group\">\r\n//                                     <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n//                                         rows=\"6\"\r\n//                                         className=\"form-control\" />\r\n//                                 </Row>\r\n\r\n//                                 <Row className=\"form-group\">\r\n//                                     <Col>\r\n//                                         <Button type=\"submit\" color=\"primary\">\r\n//                                             Submit\r\n//                                     </Button>\r\n//                                     </Col>\r\n//                                 </Row>\r\n//                             </LocalForm>\r\n//                         </ModalBody>\r\n//                     </Modal>\r\n//                 </div>\r\n//             );\r\n//         }\r\n//         else {\r\n//             return (\r\n//                 <div>\r\n//                 </div>\r\n//             );\r\n//         }\r\n//     }\r\n// }\r\n\r\n// export default DishDetail;","import React, { Component } from 'react';\r\nimport {\r\n  Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav() {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen\r\n    });\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n      + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline color=\"info\" onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                  innerRef={(input) => this.username = input} />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                  innerRef={(input) => this.password = input} />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"remember\"\r\n                    innerRef={(input) => this.remember = input} />Remember me\r\n                 </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}></RenderCard>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree,\r\n        values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n\r\n\r\n    const RenderLeader = () => {\r\n        if (props.leaders.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.leaders.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                props.leaders.leaders.map((leader) => {\r\n                    return (\r\n                        <Stagger in>\r\n                            <Fade in >\r\n                                <Media className=\"mt-5\">\r\n                                    <Media>\r\n                                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                    </Media>\r\n                                    <Media body className=\"ml-5\">\r\n                                        <b> {leader.name}</b>\r\n                                        <Media heading>\r\n                                            {leader.designation}\r\n                                        </Media>\r\n                                        {leader.description}\r\n\r\n                                    </Media>\r\n\r\n                                </Media>\r\n                            </Fade>\r\n                        </Stagger>\r\n                    );\r\n                }));\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12 pt-2\">\r\n                    <Media list>\r\n                        <RenderLeader leader={props.leader} />\r\n\r\n\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email , agree , contactType , message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message); \r\n  alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK'","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport About from './AboutComponent'\r\nimport { actions } from 'react-redux-form';\r\nimport { postFeedback , postComment, fetchDishes, fetchComments, fetchPromos ,fetchLeaders} from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email , agree , contactType , message) => \r\n  dispatch(postFeedback(firstname, lastname, telnum, email , agree , contactType , message)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  \r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n\r\nexport const Feedback = (state = { errMess: null, feedbacks:[]}, action) => {\r\n    switch (action.type) {\r\n    \r\n      case ActionTypes.ADD_FEEDBACK:\r\n          var feedback = action.payload;\r\n          return { ...state, comments: state.feedbacks.concat(feedback)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport './App.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}